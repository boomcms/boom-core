#############################################################################
## data source definition
#############################################################################

source @db.name@-page_text-site
{
	# data source type. mandatory, no default value
	type					= mysql
	sql_host				= @db.host@
	sql_user				= @db.user@
	sql_pass				= @db.password@
	sql_db					= @db.name@

	sql_query_pre = REPLACE INTO sph_counter SELECT 1, MAX(id) from page_versions
    sql_query_range = select min(id), max(id) from page_versions
	sql_range_step = 10000

	sql_query				= \
		select chunks.id, chunk.slotname, pages.id as page_id, chunk_text.text, page_versions.title, page_versions.description, page_versions.keywords, visible_from, page_mptt.parent_id from page inner join page_versions on published_vid = page_versions.id inner join page_chunk on page_versions.id = page_chunks.page_vid inner join chunk on page_chunks.chunk_id = chunks.id inner join chunk_text on chunks.id = chunk_text.chunk_id inner join page_mptt on pages.id = page_mptt.id where page_versions.deleted = false and page_versions.visible_from <= unix_timestamp() and page_versions.hidden_from_search_results = false and (page_versions.visible_to = 0 or page_versions.visible_to >= unix_timestamp()) and page_versions.id >= $start and page_versions.id <= $end;

	sql_attr_uint			= page_id:32
	sql_attr_uint			= parent_id
	sql_attr_timestamp		= visible_from
	sql_attr_string			= slotname
}

source @db.name@-page_text-site-delta : @db.name@-page_text-site
{
	sql_query_pre = 
	sql_query_range =
	sql_range_step = 0
	sql_query				= \
		select chunks.id, chunk.slotname, pages.id as page_id, chunk_text.text, page_versions.title, page_versions.description, page_versions.keywords, visible_from, parent_id from page inner join page_versions on published_vid = page_versions.id inner join page_chunk on page_versions.id = page_chunks.page_vid inner join chunk on page_chunks.chunk_id = chunks.id inner join chunk_text on chunks.id = chunk_text.chunk_id inner join page_mptt on pages.id = page_mptt.id where page_versions.deleted = false and page_versions.visible_from <= unix_timestamp() and (page_versions.visible_to = 0 or page_versions.visible_to >= unix_timestamp()) and page_versions.hidden_from_search_results = false and page_versions.id >= (SELECT max_doc_id FROM sph_counter WHERE counter_id=1 );
}

source @db.name@-page_text-cms : @db.name@-page_text-site
{
	sql_query_pre = REPLACE INTO sph_counter SELECT 2, MAX(id) from page_versions
    sql_query_range = select min(id), max(id) from page_versions
	sql_range_step = 10000

	sql_query				= \
		select chunks.id, chunk.slotname, pages.id as page_id, chunk_text.text, page_versions.title, page_versions.description, page_versions.keywords, visible_from, page_mptt.parent_id from page inner join page_versions on active_vid = page_versions.id inner join page_chunk on page_versions.id = page_chunks.page_vid inner join chunk on page_chunks.chunk_id = chunks.id inner join chunk_text on chunks.id = chunk_text.chunk_id inner join page_mptt on pages.id = page_mptt.id where page_versions.deleted = false and page_versions.visible_from <= unix_timestamp() and page_versions.hidden_from_search_results = false and (page_versions.visible_to = 0 or page_versions.visible_to >= unix_timestamp()) and page_versions.id >= $start and page_versions.id <= $end;

	sql_attr_uint			= page_id:32
	sql_attr_uint			= parent_id
	sql_attr_timestamp		= visible_from
	sql_attr_string			= slotname
}

source @db.name@-page_text-cms-delta : @db.name@-page_text-cms
{
	sql_query_pre = 
	sql_query_range =
	sql_range_step = 0
	sql_query				= \
		select chunks.id, chunk.slotname, pages.id as page_id, chunk_text.text, page_versions.title, page_versions.description, page_versions.keywords, visible_from, parent_id from page inner join page_versions on active_vid = page_versions.id inner join page_chunk on page_versions.id = page_chunks.page_vid inner join chunk on page_chunks.chunk_id = chunks.id inner join chunk_text on chunks.id = chunk_text.chunk_id inner join page_mptt on pages.id = page_mptt.id where page_versions.deleted = false and page_versions.visible_from <= unix_timestamp() and (page_versions.visible_to = 0 or page_versions.visible_to >= unix_timestamp()) and page_versions.hidden_from_search_results = false and page_versions.id >= (SELECT max_doc_id FROM sph_counter WHERE counter_id=2 );
}

#############################################################################
## index definition
#############################################################################

index @db.name@-page_text-site
{
	source			= @db.name@-page_text-site
	path			= /var/lib/sphinxsearch/data/@db.name@.page_text.site

	docinfo			= extern
	mlock			= 0
	morphology		= none

	min_word_len	= 2
	charset_type	= utf-8
	html_strip		= 1

    enable_star     = 1
    min_infix_len   = 2
    prefix_fields	= text, title, description, keywords
	infix_fields	= text, title, description, keywords

	#ignore_chars		= U+002E
}

index @db.name@-page_text-site-delta : @db.name@-page_text-site
{
	source			= @db.name@-page_text-site-delta
	path			= /var/lib/sphinxsearch/data/@db.name@.page_text.site.delta
	morphology		= stem_en
}

index @db.name@-page_text-cms : @db.name@-page_text-site
{
	source			= @db.name@-page_text-cms-delta
	path			= /var/lib/sphinxsearch/data/@db.name@.page_text.cms
	morphology		= stem_en
}

index @db.name@-page_text-cms-delta : @db.name@-page_text-cms
{
	source			= @db.name@-page_text-cms-delta
	path			= /var/lib/sphinxsearch/data/@db.name@.page_text.cms.delta
	morphology		= stem_en
}